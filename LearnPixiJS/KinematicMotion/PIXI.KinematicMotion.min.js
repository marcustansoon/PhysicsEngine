let KinematicGroup=new Set;const KinematicConstant=1/180*Math.PI;class KinematicMotion{constructor(){}registerChild(i){i.Kinematic={},i.KinematicList=new Set}unregisterChild(i){delete i.Kinematic,i.KinematicList.clear(),delete i.KinematicList,KinematicGroup.delete(i)}addMotion(i,t,e){let a=i.angle*KinematicConstant,n=Math.cos(a),c=Math.sin(a);Math.abs(n)<1e-5&&(n=0),Math.abs(c)<1e-5&&(c=0),this.hasMotion(t,e)||(e.KinematicList.add(t),KinematicGroup.add(e),e.Kinematic[t]={}),e.Kinematic[t].incrementX=n*i.v,e.Kinematic[t].previousTruncatedX=0,e.Kinematic[t].incrementY=c*i.v,e.Kinematic[t].previousTruncatedY=0,e.Kinematic[t].aX=n*i.a,e.Kinematic[t].totalAX=0,e.Kinematic[t].aY=c*i.a,e.Kinematic[t].totalAY=0}hasMotion(i,t){return t.KinematicList.has(i)}removeMotion(i,t){t.KinematicList.delete(i),delete t.Kinematic[i]}updateMotion(){KinematicGroup.forEach(i=>{i.KinematicList.forEach(t=>{let e=i.Kinematic[t].incrementX+i.Kinematic[t].totalAX+i.Kinematic[t].previousTruncatedX,a=i.Kinematic[t].incrementY+i.Kinematic[t].totalAY+i.Kinematic[t].previousTruncatedY,n=Math.floor(e),c=Math.floor(a);i.x+=n,i.Kinematic[t].previousTruncatedX=e-n,i.y+=c,i.Kinematic[t].previousTruncatedY=a-c,i.Kinematic[t].totalAX+=i.Kinematic[t].aX,i.Kinematic[t].totalAY+=i.Kinematic[t].aY})})}}if(!PIXI)throw new Error("PIXI undefined, please include the PIXI.js script");PIXI.KinematicMotion=KinematicMotion;
